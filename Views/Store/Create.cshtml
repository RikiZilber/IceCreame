@model crudTest.Models.Store

@{
    ViewBag.Title = "Create";
}
@Styles.Render("~/css/css")

        <!-- contact -->
        <div class="contact-main  w3layouts-section py-5">
            <div class="container py-xl-5 py-lg-3">
                <div class="title-heading text-center mb-sm-5 mb-4">
                    <h3 class="title text-capitalize text-dark">Add Store</h3>
                    <p class="title-text font-weight-light font-italic mt-2">Add your new Store!</p>
                </div>
                <div class="inner_contact">
                    <div class=" contact-leftgrid">
                        <div class="wthree-contact-form">


                            @using (Html.BeginForm())
                            {
                                @Html.AntiForgeryToken()

                                <div class="form-horizontal">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="form-group">
                                        @*@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">*@
                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { placeholder = "Shop Name", required = "", style = "border-color:black", pattern = "^[A-Za-z ,]+" } })
                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @*@Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">*@
                                    @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { placeholder = "Store image Link", required = "", style = "border-color:black" } })
                                    @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    @*@Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">*@
                                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { placeholder = "Adrress", required = "", style = "border-color:black" ,pattern = "^[A-Za-z0-9, .-]+"} })
                                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    @*@Html.LabelFor(model => model.Kosher, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">*@
                                    @Html.EditorFor(model => model.Kosher, new { htmlAttributes = new { placeholder = "Kashrut", required = "", style = "border-color:black", pattern = "^[A-Za-z - ]+" } })
                                    @Html.ValidationMessageFor(model => model.Kosher, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.EditorFor(model => model.Hours, new { htmlAttributes = new { placeholder = "Open hours", required = "", style = "border-color:black", pattern = "^[A-Za-z0-9 -.,:]+" } })
                                    @Html.ValidationMessageFor(model => model.Hours, "", new { @class = "text-danger" })
                                </div>


                                <div class="form-group">
                                    @*@Html.LabelFor(model => model.Tel, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">*@
                                    @Html.EditorFor(model => model.Tel, new { htmlAttributes = new { placeholder = "Phone number", required = "", style = "border-color:black", pattern = "^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-/ /./0-9]*$" } })
                                    @Html.ValidationMessageFor(model => model.Tel, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Create" style="background:#000000" />
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="contact-right-grid">
                        <div class="wthree-contact-form">
                            <br />
                            <br />
                            <br />
                            <br />
                            <br />
                            <br />
                            <br />
                            <div style="color:white;font-family:Pacifico;font-size:xx-large">
                                Improve users experients by adding more special places! <br /> by filling all details you help users to find their best match!
                            </div>
                            <br />
                            <br />
                            <br />
                            <br />
                            <br />
                            <br />
                            <br />
                            <br />
                            <div>
                                <a href="/IceCream/Create" value="Add Ice Cream" style="background: #2d2d2d">
                                    <input type="submit" value="Add Ice-cream">
                                    </a>
</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        @if (ViewBag.Error != null)
        {
            <script type="text/javascript">
            window.onload = function () {
                alert("@ViewBag.Error");
            };
            </script>
        }


        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
