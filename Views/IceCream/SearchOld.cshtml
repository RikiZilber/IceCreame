@model crudTest.Models.Search



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <table>
                <tr>
                    <td>
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    </td>
                    <td>
                        @Html.LabelFor(model => model.Rank, htmlAttributes: new { @class = "control-label col-md-2" })
                    </td>
                    <td>
                        @Html.LabelFor(model => model.Energy, htmlAttributes: new { @class = "control-label col-md-2" })
                    </td>
                    <td>
                        @Html.LabelFor(model => model.Protein, htmlAttributes: new { @class = "control-label col-md-2" })
                    </td>
                    <td>
                        @Html.LabelFor(model => model.Fats, htmlAttributes: new { @class = "control-label col-md-2" })
                    </td>

                </tr>
                <tr>
                    <td>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </td>
                    <td>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Rank, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Rank, "", new { @class = "text-danger" })
                        </div>
                    </td>
                    <td>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Energy, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Energy, "", new { @class = "text-danger" })
                        </div>
                    </td>
                    <td>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Protein, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Protein, "", new { @class = "text-danger" })
                        </div>
                    </td>
                    <td>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Fats, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Fats, "", new { @class = "text-danger" })
                        </div>
                    </td>
                    <td>
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Search" class="btn btn-default" />
                        </div>
                    </td>
                </tr>
            </table>
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
